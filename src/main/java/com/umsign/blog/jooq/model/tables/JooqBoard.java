/*
 * This file is generated by jOOQ.
 */
package com.umsign.blog.jooq.model.tables;


import com.umsign.blog.jooq.model.Indexes;
import com.umsign.blog.jooq.model.Jooq;
import com.umsign.blog.jooq.model.Keys;
import com.umsign.blog.jooq.model.tables.records.JooqBoardRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqBoard extends TableImpl<JooqBoardRecord> {

    private static final long serialVersionUID = 703755825;

    /**
     * The reference instance of <code>jooq.jooq_board</code>
     */
    public static final JooqBoard JOOQ_BOARD = new JooqBoard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JooqBoardRecord> getRecordType() {
        return JooqBoardRecord.class;
    }

    /**
     * The column <code>jooq.jooq_board.seq</code>.
     */
    public final TableField<JooqBoardRecord, Integer> SEQ = createField("seq", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jooq.jooq_board.author</code>.
     */
    public final TableField<JooqBoardRecord, String> AUTHOR = createField("author", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>jooq.jooq_board.content</code>.
     */
    public final TableField<JooqBoardRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>jooq.jooq_board.read_cnt</code>.
     */
    public final TableField<JooqBoardRecord, String> READ_CNT = createField("read_cnt", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>jooq.jooq_board.add_date</code>.
     */
    public final TableField<JooqBoardRecord, Timestamp> ADD_DATE = createField("add_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jooq.jooq_board.mod_date</code>.
     */
    public final TableField<JooqBoardRecord, Timestamp> MOD_DATE = createField("mod_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>jooq.jooq_board</code> table reference
     */
    public JooqBoard() {
        this(DSL.name("jooq_board"), null);
    }

    /**
     * Create an aliased <code>jooq.jooq_board</code> table reference
     */
    public JooqBoard(String alias) {
        this(DSL.name(alias), JOOQ_BOARD);
    }

    /**
     * Create an aliased <code>jooq.jooq_board</code> table reference
     */
    public JooqBoard(Name alias) {
        this(alias, JOOQ_BOARD);
    }

    private JooqBoard(Name alias, Table<JooqBoardRecord> aliased) {
        this(alias, aliased, null);
    }

    private JooqBoard(Name alias, Table<JooqBoardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JooqBoard(Table<O> child, ForeignKey<O, JooqBoardRecord> key) {
        super(child, key, JOOQ_BOARD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jooq.JOOQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.JOOQ_BOARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JooqBoardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_JOOQ_BOARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JooqBoardRecord> getPrimaryKey() {
        return Keys.KEY_JOOQ_BOARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JooqBoardRecord>> getKeys() {
        return Arrays.<UniqueKey<JooqBoardRecord>>asList(Keys.KEY_JOOQ_BOARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JooqBoard as(String alias) {
        return new JooqBoard(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JooqBoard as(Name alias) {
        return new JooqBoard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JooqBoard rename(String name) {
        return new JooqBoard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JooqBoard rename(Name name) {
        return new JooqBoard(name, null);
    }
}
